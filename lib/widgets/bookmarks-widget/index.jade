mixin list-item(bookmark)
  mp-list-item(
    attrs={
      active: activeBookmark && activeBookmark.id === bookmark.id
    }
    on={
      click: () => $helpers.selectBookmark(bookmark),
      mouseover: () => $helpers.activateBookmark(bookmark),
      mouseleave: () => $helpers.activateBookmark(null),
    }
  )
    .mp-bm-menu-bookmark-row
      .mp-bm-menu-bookmark-details
        .mp-bm-menu-name(attrs={title: bookmark.name})
          for token, pos in $helpers.stringFilterMatches(bookmark.name, filterText)
             if pos % 2 === 1
               span= $helpers.truncateMiddle(token, 40)
             else
               b= token
        .mp-bm-menu-creator= bookmark.user

      if $component.isAttributeEnabled('has-write-permissions')
        .mp-bm-menu-delete-button(on={click: e => $helpers.openConfirmDeleteDialog(e, bookmark)})
          svg-icon(attrs={icon: 'trashcan'})

.mp-bm-container(on={scroll: $helpers.stopPropagation})
  mp-upsell-popup(
    attrs={
      open: showUpsellModal,
      feature: 'bookmark-maximum',
    }
    on={change: $helpers.closeUpsellModal}
  )
  .mp-bm-btn(on={click: $helpers.toggleBookmarksMenu})
    .mp-bm-btn-icon
      svg-icon(attrs={icon: 'bookmarks'})
    span Bookmarks
  .mp-bm-menu(attrs={tabindex: 0})
    mp-drop-menu(attrs={open} on={change: $helpers.handleDropMenuChange})
      .mp-bm-menu-container(attrs={'slot-body': true})
        mp-icon-input(
          attrs={
            icon: 'search',
            placeholder: 'Search bookmarks...',
          }
          on={
            change: $helpers.stopPropagation,
            input: $helpers.setFilterText,
          }
        )
        .mp-bm-menu-list
          if filteredBookmarks.length === 0
            mp-list-item(attrs={static: true})
              .mp-bm-menu-empty No bookmarks found, try creating a bookmark.
          else
            - const showSectionHeader = filteredBookmarks[0].user_id === userId && filteredBookmarks[filteredBookmarks.length - 1].userId !== userId
            for bookmark, idx in filteredBookmarks
              if showSectionHeader
                if idx === 0
                  mp-list-item(attrs={static: true})
                    .mp-bm-menu-section-header Your Bookmarks
                else if bookmark.user_id !== userId && filteredBookmarks[idx - 1].user_id === userId
                  .mp-bm-menu-list-item-divider
                  mp-list-item(attrs={static: true})
                    .mp-bm-menu-section-header Other bookmarks
              +list-item(bookmark)
        if $component.isAttributeEnabled('has-write-permissions')
          .mp-bm-menu-add
            if !$component.isAttributeEnabled('create-disabled') && (createMode || saving)
              mp-input-group(
                attrs={autofocus: true, placeholder: 'Name your bookmark', busy: saving}
                on={
                  keydown: $helpers.stopPropagation,
                  change: $helpers.stopPropagation,
                  input: $helpers.setName,
                  submit: $helpers.createBookmark,
                }
              )
            else
              mp-button-bar.mp-button-bar-secondary(
                attrs={disabled: $component.isAttributeEnabled('create-disabled')}
                on={click: $component.isAttributeEnabled('over-free-limit') ? $helpers.openUpsellModal : $helpers.goToCreateMode}
              )
                .mp-bm-menu-button-bar-text(
                  class={'mp-bm-menu-over-free-text': $component.isAttributeEnabled('over-free-limit')}
                ) Create new bookmark
              if $component.isAttributeEnabled('over-free-limit')
                .mp-bm-menu-upsell-icon
                    svg-icon(attrs={icon: 'lightning-bolt'})

  if confirmDeleteBookmark
    mp-confirm-delete(
      attrs={closeable: true, open: true}
      on={
        change: $helpers.handleConfirmModalChange,
        submit: $helpers.handleConfirmSubmit,
      }
    )
      .mp-bm-menu-confirm-delete-container(attrs={'slot-body': true})
        .mp-confirm-delete-title Delete bookmark
        if confirmDeleteBookmark.include_in_dashboard
          .mp-confirm-delete-description
            | Are you sure you want to delete the bookmark named "#{confirmDeleteBookmark.name}"?
            br
            br
            | Deleting it will also remove it from all dashboards.
        else
          .mp-confirm-delete-description Are you sure you want to delete the bookmark named "#{confirmDeleteBookmark.name}"?
