mixin list-item(bookmark)
  .mp-bm-menu-list-item(
    class={
      'mp-bm-menu-list-item-active': activeBookmark && bookmark.id === activeBookmark.id,
    }
    on={
      click: () => $helpers.selectBookmark(bookmark),
      mouseover: () => $helpers.activateBookmark(bookmark),
    }
  )
    .mp-bm-menu-list-item-content
      .mp-bm-menu-name(attrs={title: bookmark.name})
        +highlight(bookmark.name, filterText, 'mp-bm-menu-highlight')
      .mp-bm-menu-creator= bookmark.user
    .mp-bm-menu-delete-button(on={click: e => $helpers.openConfirmDeleteDialog(e, bookmark)})
      svg-icon(attrs={icon: 'trashcan'})

mixin highlight(target, search, highlightClass)
  - const searchRegex = new RegExp(`(${search})`, 'gi');
  - const tokens = target.replace(searchRegex, '<>$1<>').split('<>');
  for token in tokens.filter(Boolean)
    span(class={[highlightClass]: token.toLowerCase() === search.toLowerCase()})= token

.mp-bm-container(on={scroll: $helpers.stopPropagation})
  .mp-bm-btn(on={click: $helpers.toggleBookmarksMenu})
    .mp-bm-btn-icon
      svg-icon(attrs={icon: 'bookmarks'})
    span Bookmarks
  .mp-bm-menu(attrs={tabindex: 0})
    mp-drop-menu(attrs={open} on={change: $helpers.handleDropMenuChange})
      .mp-bm-menu-container(attrs={'slot-body': true})
        .mp-bm-menu-search
          .mp-bm-menu-mp-icon.mp-icon
            svg-icon(attrs={icon: 'search'})
          input(
            attrs={
              type: 'text',
              placeholder: 'Filter bookmarks',
            }
            on={
             change: $helpers.stopPropagation,
             input: $helpers.setFilterText,
            }
          )
        .mp-bm-menu-list
          if filteredBookmarks.length === 0
            .mp-bm-menu-empty No bookmarks found.
          else
            - const showSectionHeader = filteredBookmarks[0].user_id === userId && filteredBookmarks[filteredBookmarks.length - 1].userId !== userId
            for bookmark, idx in filteredBookmarks
              if showSectionHeader
                if idx === 0
                  .mp-bm-menu-section-header Your Bookmarks
                else if bookmark.user_id !== userId && filteredBookmarks[idx - 1].user_id === userId
                  .mp-bm-menu-section-header Other bookmarks
              +list-item(bookmark)
        .mp-bm-menu-add
          if !$component.isAttributeEnabled('create-disabled') && (createMode || saving)
            mp-input-group(
              attrs={autofocus: true, placeholder: 'Name your bookmark', busy: saving}
              on={
                keydown: $helpers.stopPropagation,
                change: $helpers.stopPropagation,
                input: $helpers.setName,
                submit: $helpers.createBookmark,
              }
            )
          else
            mp-button-bar.mp-button-bar-secondary(
              attrs={disabled: $component.isAttributeEnabled('create-disabled')}
              on={click: $helpers.goToCreateMode}
            ) Create new bookmark

  if confirmDeleteBookmark
    mp-confirm-delete(
      attrs={closeable: true, open: true}
      on={
        change: $helpers.handleConfirmModalChange,
        submit: $helpers.handleConfirmSubmit,
      }
    )
      .mp-bm-menu-confirm-delete-container(attrs={'slot-body': true})
        .mp-confirm-delete-title Delete Bookmark
        if confirmDeleteBookmark.include_in_dashboard
          .mp-confirm-delete-description Are you sure you want to delete the bookmark named “#{confirmDeleteBookmark.name}”? Deleting it will also remove it from all dashboards.
        else
          .mp-confirm-delete-description Are you sure you want to delete the bookmark named “#{confirmDeleteBookmark.name}”?
