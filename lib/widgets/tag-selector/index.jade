.mp-tag-selector-container
  if loadState == 'loading_widget'
    .mp-tag-selector-spinner
      mp-spinner
  else
    .mp-tag-selector-top-input-wrapper
      .mp-tag-selector-input-wrapper(onclick=$helpers.focusInput)
        - const icon = $component.isAttributeEnabled('read-only') ? 'search' : 'tag';
        .mp-tag-selector-icon-wrapper(class={
          'mp-tag-selector-tag-icon': icon === 'tag',
          'mp-tag-selector-search-icon': icon === 'search',
          'mp-tag-selector-loaded': loadState === 'loaded_tag',
          'mp-tag-selector-loaded-error': loadState === 'error',
        })
          if loadState == 'loading_tag'
            mp-spinner
          else
            svg-icon(attributes={icon})
        if !$component.isAttributeEnabled('read-only')
          - const tags = [...selectedTags]
          for tag in tags
            mp-tag(
              attributes={'tag-name': tag, 'icon': 'lock-locked'}
              onchange=e => { e.stopPropagation(); $helpers.removeTag(tag) }
            )
        input.mp-tag-selector-search-input(
          style=`width: ${inputWidth}`
          oninput=$helpers.setInputText
          onkeydown=$helpers.handleKeyDown
          onkeypress=$helpers.handleKeyPress
          type='text'
        )= inputText
        .mp-tag-selector-border(class={'mp-tag-selector-loaded-error': loadState === 'error'})

    - const hasMatches = matchingTags.length;
    - const showCreateButton = $helpers.showCreateButton();

    if hasMatches || showCreateButton
      .mp-tag-selector-hr

    if hasMatches
      .mp-tag-selector-tag-list
        for tag, tagIdx in matchingTags
          mp-list-item(
            onclick=() => $helpers.addTag(tag)
            attributes={'active': tagIdx === activeTagIndex}
          )
            for token, pos in $helpers.stringFilterMatches(tag, inputText)
              if pos % 2 === 1
                span= token
              else
                b= token

    else if showCreateButton
      .mp-tag-selector-footer(onclick=() => $helpers.addTag(inputText))
        .mp-tag-selector-copy Create new label for
          =' '
        .mp-tag-selector-label-name #{inputText}
