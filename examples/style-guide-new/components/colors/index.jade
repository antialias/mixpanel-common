- const colorGroups = $helpers.getColorGroups()

.section
  .section-title-container(class={
    'no-match': sectionOpen === 'search',
  })
    .section-title
      .title-text Colors
      .title-section 1.1
    .divider#ui-colors
  .section-content(class={
    'no-match': !searchSections.includes('ui-colors'),
  })
    section
      .subsection-title Mixpanel UI Colors
      .subsection-description Mixpanel User Interface is primarily created with the blue and grey palettes. This limited selection provides constraint and visual continuity across our UI. When using lighter values (50-300) be especially conscious of creating contrast that is too low for visibility standards.
      .indent-container
        .color-chips
          for color in colorGroups['Mixpanel UI Colors']
            if (sectionOpen == 'search' && color.includes(searchTerm)) || sectionOpen == 'colors'
              .swatch
                .swatch-color(style={'background-color': COLORS[color]})
                .swatch-label
                  .color-name= color
                  .color-hex= COLORS[color]
        .code-snippet
          .call-out.first-call-out
            strong.icon +
            strong Example Code
          .snippet-container.min.max
            .snippet-header
              label Stylus
            .code-field
              pre
                | 1
                br
                | 2
                br
                | 3
                br
                | 4
                br
                | 5
              pre
                span.grey-500  /* Color declarations */
                br
                |   color
                span.mp-red  mp-red
                br
                |   background-color
                span.mp-red  grey-100
                br
                |   border 1px solid
                span.mp-red  blue-700
                br
                |   background-image 
                span.mp-purple linear-gradient(0deg, 
                span.mp-red mp-blue 
                span.mp-purple 0, 
                span.mp-red blue-100 
                span.mp-purple 100%)
  .sub-section-container#data-viz-colors(class={
    'no-match': !searchSections.includes('data-viz-colors'),
  })
    .divider
      label 1.2
    .section-content
      section
      .subsection-title Data Visualization
      .subsection-description These colors have been selected for info-graphics based on their high visibility / contrast and adherance to accessibility standards. When necessary, these colors can be used in varying degrees of opacity to account for lack of gadiation in selection. Think: Retention and Signal heat maps.
      .indent-container
        .color-chips
          for color in colorGroups['Data Visualization']
            if (sectionOpen == 'search' && color.includes(searchTerm)) || sectionOpen == 'colors'
              .swatch
                .swatch-color(style={'background-color': COLORS[color]})
                .swatch-label
                  .color-name= color
                  .color-hex= COLORS[color]
  .sub-section-container#color-library(class={
    'no-match': !searchSections.includes('color-library'),
  })
    section.color-library-container
    - const colorLibrary = $helpers.getColorLibraries()
    .divider
      label 1.3
    .section-content
      section
      .subsection-title Color Library
      .subsection-description Mixpanel Colors (mp-) are the 500 value from our color library, with the exception of mp-blue (300). Design recommends that you stick with the primary values (500), and utilize other values as accents, in order to maintain a consistent look and feel across all of our products.
      .indent-container
        .color-library
          for colorGroup in Object.keys(colorLibrary)
            if (sectionOpen == 'search' && colorGroup.includes(searchTerm)) || sectionOpen == 'colors'
              .color-group-container
                strong.color-group-title= colorGroup
                .color-group
                  for color in colorLibrary[colorGroup]
                    .color-segment(style={'background-color': COLORS[color]})
                      .color-segment-hex= COLORS[color]
                      .color-segment-name= color

